% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FragStatsCalc.R
\name{FragStatsCalc}
\alias{FragStatsCalc}
\title{Calculates a user defined set of landscape fragmentation indices for patch
types identified in a \code{raster}*Object.}
\usage{
FragStatsCalc(
  inputRasterFiles = NULL,
  latlon = NULL,
  polyName = NULL,
  studysite = NULL,
  FragStats = "all",
  ncores = 1,
  saveCSV = FALSE
)
}
\arguments{
\item{inputRasterFiles}{A \code{raster}-Object. Fragmentation statistics area
calculated seperatly for every layer.}

\item{latlon}{\code{logical}: Indicates whether or not the
\code{inputForestMap} object is based on a geographic coordinate system
or is projected to a planar coordinate system. In the former case,
area is approximated by \code{\link[raster:area]{raster::area}}.}

\item{polyName}{\code{charachter} of length 1. Indicates the column in the
data frame of the \code{studysite} object to uniquely identify the features
of interest. The function will fail if there is no unique identification of
the polygons}

\item{studysite}{An object of type \code{sf} with a given
number of polygons defining the areas of interest. Forest area statistics
will be calculated for features in the \code{studysite} object.}

\item{FragStats}{Character vector of forest fragmentation parameters to be
calculated. Currently available statistics are:
\itemize{
\item \strong{n.patches} the number of patches of a particular patch type or in a
class
\item \strong{total.area} the sum of the areas (m2) of all patches of the
corresponding patch type
\item \strong{prop.landscape} the proportion of the total lanscape represented by
this class
\item \strong{patch.density} the numbers of patches of the corresponding patch type
divided by total landscape area
\item \strong{total.edge} the total edge length of a particular patch type
\item \strong{edge.density} edge length on a per unit area basis that facilitates
comparison among landscapes of varying size
\item \strong{mean.patch.area} average area of patches
\item \strong{mean.frac.dim.index} mean of fractal dimension index
\item \strong{lanscape.division.index} based on the cumulative patch area distribution
and is interpreted as the probability that two randomly chosen pixels in the
landscape are not situated in the same patch
\item \strong{patch.cohesion.index} measures the physical connectedness of the
corresponding patch type
\item \strong{landscape.shape.index} a standardized measure of total edge or edge
density that adjusts for the size of the landscape
\item \strong{largest.patch.index} largest patch index quantifies the percentage of
total landscape area comprised by the largest patch
\item \strong{sd.patch.area}standard deviation of patch areas
\item \strong{min.patch.area} the minimum patch area of the total patch areas
\item \strong{max.patch.area} the maximum patch area of the total patch areas
\item \strong{perimeter.area.frac.dim} perimeter-area fractal dimension equals 2
divided by the slope of regression line obtained by regressing the
logarithm of patch area (m2) against the logarithm of patch perimeter (m)
\item \strong{mean.perim.area.ratio} the mean of the ratio patch perimeter. The
perimeter-area ratio is equal to the ratio of the patch perimeter (m) to
area (m2)
\item \strong{sd.perim.area.ratio} standard deviation of the ratio patch perimeter
\item \strong{max.perim.area.ratio} maximum perimeter area ratio
\item \strong{mean.shape.index} mean of shape index
\item \strong{sd.shape.index} standard deviation of shape index
\item \strong{min.shape.index} the minimum shape index
\item \strong{max.shape.index} the maximum shape index
\item \strong{sd.frac.dim.index} standard deviation of fractal dimension index
\item \strong{min.frac.dim.index} the minimum fractal dimension index
\item \strong{max.frac.dim.index} the maximum fractal dimension index
\item \strong{total.core.area}the sum of the core areas of the patches (m2)
\item \strong{prop.landscape.core} proportional landscape core
\item \strong{mean.patch.core.area} mean patch core area
\item \strong{sd.patch.core.area} standard deviation of patch core area
\item \strong{min.patch.core.area} the minimum patch core area
\item \strong{max.patch.core.area} the maximum patch core area
\item \strong{prop.like.adjacencies} calculated from the adjacency matrix, which
shows the frequency with which different pairs of patch types (including
like adjacencies between the same patch type) appear side-by-side on the
map (measures the degree of aggregation of patch types)
\item \strong{aggregation.index} computed simply as an area-weighted mean class
aggregation index, where each class is weighted by its proportional area
in the landscape
\item \strong{izesplitting.index} based on the cumulative patch area distribution and
is interpreted as the effective mesh number, or number of patches with a
constant patch size when the landscape is subdivided into S patches, where
S is the value of the splitting index
\item \strong{effective.mesh.size} equals 1 divided by the total landscape area
(m2) multiplied by the sum of patch area (m2) squared, summed across all
patches in the landscape
}}

\item{ncores}{The number of cores to use, i.e. at most how many child
processes will be run simultaneously.}

\item{saveCSV}{Default is \code{FALSE}. You can specify a directory on your
local machine where the results area saved in \code{.csv} format. The
features will be identified by the column specified in \code{polyName}.}
}
\value{
An \code{sf}-object with it's dataframe ammended by the specified
  fragmentation statistics with one column for every layer
  in \code{inputRasterFiles} representing observation years. Additionally trend
  statistics and the difference between the first and last observation
  are automatically calculated for every single parameter based on
  \code{\link[trend:sens.slope]{trend:sens.slope}}.
}
\description{
Calculates a user defined set of landscape fragmentation indices for patch
types identified in a \code{raster}*Object.
}
\examples{
library(sf)
library(raster)
library(mapme.forest)

aoi = st_read(system.file("extdata", "aoi_polys.gpkg", package = "mapme.forest"))
yearlyRaster = stack(system.file("extdata", "pkgTest_yearlyCover.tif",
                                 package = "mapme.forest"))
names(yearlyRaster) = paste("y_", as.character(2000:2018))

result = FragStatsCalc(inputRasterFiles = yearlyRaster,
                       studysite = aoi[1,],
                       FragStats = c("n.patches", "total.area",
                                     "prop.landscape", "patch.density"),
                       latlon = TRUE,
                       polyName = "id",
                       ncores = 2,
                       saveCSV = FALSE)
str(result)

}
\author{
Darius Görgen, Dr. Fabian Löw (MapTailor Geospatial Consulting GbR) \email{info@maptailor.net}
\cr
\emph{Maintainer:} KfW FZ Evaluierung \email{FZ-Evaluierung@kfw.de}
\cr
\emph{Contact Person:} Dr. Johannes Schielein
\cr
\emph{Copyright:} KfW Bankengruppe
\cr
\emph{License:} GPL-3
}
